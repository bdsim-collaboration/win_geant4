name: build windows geant4

on:
  push:
    tags:
    - 'v*'

jobs:
  build-geant4:
    name: Build geant4
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
      checks: write

    strategy:
      fail-fast: false
      matrix:
        geant4-version: ["v10.7.4", "v11.0.4", "v11.1.3", "v11.2.2"]
        os: [windows-2019, windows-2022]

    steps:
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: 3.12
 
      - uses: actions/checkout@v4       

      - name: Install conda dependencies on Windows
        run: .github/bin/install-deps-windows.cmd

      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v2
        id: cpu-cores

      - name: Build CLHEP
        shell: bash
        run: |
          curl --output clhep-2.4.6.3.tgz https://proj-clhep.web.cern.ch/proj-clhep/dist1/clhep-2.4.6.3.tgz
          tar -xf clhep-2.4.6.3.tgz
          patch ./2.4.6.3/CLHEP/Random/test/testAnonymousEngineRestore.cc .github/patches/testAnonymousEngineRestore.patch
          patch ./2.4.6.3/CLHEP/Random/test/testBug73093.cc .github/patches/testBug73093.patch
          patch ./2.4.6.3/CLHEP/Random/test/testInstanceRestore.cc .github/patches/testInstanceRestore.patch
          patch ./2.4.6.3/CLHEP/Random/test/testVectorSave.cc .github/patches/testVectorSave.patch
          mkdir clhep-build
          mkdir geant4-${{ matrix.geant4-version }}  
          cd clhep-build
          cmake ../2.4.6.3/CLHEP/ -DCMAKE_INSTALL_PREFIX=${{runner.temp}}/geant4-${{matrix.geant4-version}}
          cmake --build . -j
          cmake --install . 
          cd ../


      - name: Build Geant4
        shell: bash
        run: |
          git clone https://gitlab.cern.ch/geant4/geant4.git
          cd geant4
          git checkout ${{ matrix.geant4-version }}
          cd ../
          mkdir geant4-build
          mkdir geant4-${{ matrix.geant4-version }}
          cd geant4-build 
          cmake ../geant4 -DGEANT4_INSTALL_DATA=ON -DGEANT4_USE_GDML=ON -DGEANT4_USE_OPENGL_X11=ON -DGEANT4_USE_SYSTEM_CLHEP=ON -DGEANT4_USE_RAYTRACER_X11=ON -DCMAKE_PREFIX_PATH=${{runner.temp}}/geant4-${{matrix.geant4-version}} -DCMAKE_INSTALL_PREFIX=${{runner.temp}}/geant4-${{matrix.geant4-version}}
          cmake --build -j${{ steps.cpu-cores.outputs.count }} 
          cmake --install .
          cd ../
          tar vzcf ${{runner.temp}}/geant4-${{ matrix.os }}-${{ matrix.geant4-version }}.tgz geant4-${{ matrix.geant4-version }}

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          name: Release ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
          allowUpdates: true

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./geant4-${{ matrix.os }}-${{ matrix.geant4-version }}.tgz
          asset_name: geant4-${{ matrix.os }}-${{ matrix.geant4-version }}.tgz
          asset_content_type: application/gzip